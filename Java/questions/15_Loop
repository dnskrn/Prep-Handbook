Questions
=========
1. What are the different types of loops available in Java?
Java supports three types of loops: 'for' loop, 'while' loop, and 'do-while' loop.

2. Explain the syntax of a 'for' loop in Java.
The syntax of a 'for' loop in Java is:
for (initialization; condition; update) {
    // code block to be executed
}

3. How does a 'while' loop work in Java? Provide an example?
A 'while' loop repeats a block of code as long as a specified condition is true.
Example:
int i = 0;
while (i < 5) {
    System.out.println(i);
    i++;
}

4. What is the purpose of a 'do-while' loop in Java? Give an example?
A 'do-while' loop is similar to a 'while' loop, but it executes the block of code at least
once, even if the condition is false.
Example:
int i = 0;
do {
    System.out.println(i);
    i++;
} while (i < 5);

5. Discuss the differences between a 'while' loop and a 'do-while' loop in Java?
The main difference is that a 'while' loop checks the condition before entering the loop,
while a 'do-while' loop checks the condition after executing the loop's body at least once.

6. Explain the concept of an infinite loop. How can it be avoided?
An infinite loop is a loop that runs indefinitely because the loop condition is always true.
It can be avoided by ensuring that the loop condition eventually becomes false.

7. How can you terminate a loop prematurely in Java?
You can use the 'break' statement to terminate a loop prematurely based on a certain condition.

8. What is the role of the 'break' statement in loops? Provide an example.
The 'break' statement is used to exit the loop prematurely.
Example:
for (int i = 0; i < 10; i++) {
    if (i == 5) {
        break;
    }
    System.out.println(i);
}

9. How does the 'continue' statement work in loops? Give an example?
The 'continue' statement skips the current iteration of the loop and proceeds with the next
iteration.
Example:
for (int i = 0; i < 5; i++) {
    if (i == 2) {
        continue;
    }
    System.out.println(i);
}

10. Discuss the concept of nested loops in Java. Provide an example?
Nested loops are loops within another loop.
Example:
for (int i = 0; i < 3; i++) {
    for (int j = 0; j < 3; j++) {
        System.out.println(i + " " + j);
    }
}

11. Advantages and Disadvantages of Nested Loops:
Advantages:
1. Nested loops allow you to work with multidimensional data structures, such as matrices
or arrays of arrays.
2. They provide a way to perform complex repetitive tasks efficiently.
Disadvantages:
1. Nested loops can make code harder to read and understand, especially if they are deeply
nested.
2. They can also lead to performance issues if not used carefully, as the execution time
increases with each additional nested level.

12. Difference between 'for' and 'foreach' loops in Java:
1. The 'for' loop is a traditional loop that allows you to iterate over a range of values
using an index variable. It provides more control over the loop iteration.

2. The 'foreach' loop, also known as the enhanced 'for' loop, is used specifically for iterating
over elements of arrays or collections. It simplifies the syntax for iterating over such data
structures and doesn't require an explicit index variable.

3. For each loop can traverse / iterate only in forward direction whereas for loop can traverse /
iterate in both directions.

Enhanced 'for' loop introduced in Java 5.0:

13. The enhanced 'for' loop provides a simpler syntax for iterating over elements of arrays
or collections?
It eliminates the need for explicit initialization, condition, or increment statements.
Example:
int[] arr = {1, 2, 3, 4, 5};
for (int num : arr) {
    System.out.println(num);
}

14. When to use 'for' loop versus 'while' loop or 'do-while' loop:
1. Use 'for' loop when you know the number of iterations beforehand or need to iterate over
a range of values.
2. Use 'while' loop when you don't know the number of iterations beforehand or when you need
to check a condition before each iteration.
3. Use 'do-while' loop when you want to execute the loop body at least once, regardless of the
condition being true.


